{
    "type": "Ext.app.Application",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "myAppCustomReference": null,
        "models": [
            "Tortlet",
            "Dream",
            "Tortoise",
            "Tuser"
        ],
        "stores": [
            "IncompleteTortletsStore",
            "TodaysTortletsStore",
            "DreamsStore",
            "TortoisesStore"
        ],
        "views": [
            "MainTabPanel",
            "HomePage",
            "TortletsDetails",
            "TortoiseDetails",
            "DreamDetails",
            "DreamListPanel",
            "TortoiseListPanel",
            "HomeTabCardPanel",
            "TortletsList",
            "DreamListCardPanel",
            "DreamList",
            "TortoiseList",
            "ScoreTabCardPanel",
            "HelpPanel",
            "TodaysTortletList",
            "LandingCardPanel",
            "loginmodule",
            "signupmodule",
            "TodaysTortletListPanel",
            "TortletListPanel",
            "TortletsListsContainerPanel",
            "UserScoreGuageChart",
            "HomePageHelpModal"
        ],
        "requires": [
            "Ext.chart.series.Gauge",
            "Ext.chart.series.sprite.PieSlice",
            "Ext.MessageBox"
        ],
        "controllers": [
            "HomeTabController",
            "DreamsTabController",
            "SampleOverriddenController",
            "UserCredentialsController",
            "UtilityController",
            "UserScoreTabController"
        ],
        "name": "MyApp"
    },
    "designerId": "application",
    "customConfigs": [
        {
            "group": "(Custom Properties)",
            "name": "myAppCustomReference",
            "type": "string"
        }
    ],
    "cn": [
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "launch",
                "implHandler": [
                    "console.log('application launch');\r",
                    "// Destroy the #appLoadingIndicator element\r",
                    "Ext.fly('appLoadingIndicator').destroy();\r",
                    "\r",
                    "var lastUserId = localStorage.getItem('userid');\r",
                    "var userObject = JSON.parse(localStorage.getItem('userInfo'));\r",
                    "\r",
                    "var credentialController = MyApp.app.getController('MyApp.controller.UserCredentialsController');\r",
                    "\r",
                    "if( userObject !== null ){ \r",
                    "\r",
                    "    console.log('populate user resources');\r",
                    "    credentialController.populateUserResources(userObject);\r",
                    "    console.log('done populte user resoures');\r",
                    "    var currentUser = Ext.create('MyApp.model.Tuser');\r",
                    "    currentUser.set('id',userObject.id);\r",
                    "    currentUser.set('firstName',userObject.firstName);\r",
                    "    currentUser.set('lastName',userObject.lastName);\r",
                    "    currentUser.set('userid',userObject.userid);\r",
                    "    currentUser.set('version',userObject.version); \r",
                    "    MyApp.app.currentUser = currentUser; // Here currentUser becomes global variable to be accessed using MyApp.app.currentUser\r",
                    "    MyApp.app.currentUser.tempId = 0;\r",
                    "\r",
                    "    var landingCardPanel = Ext.create('MyApp.view.LandingCardPanel', {fullscreen: true});\r",
                    "    var mainTabPanel = credentialController.getMainTabPanel();\r",
                    "    landingCardPanel.setActiveItem(mainTabPanel);\r",
                    "}else {\r",
                    "    console.log('generating landingcardpanel');\r",
                    "    var landingCardPanelLogin = Ext.create('MyApp.view.LandingCardPanel', {fullscreen: true});\r",
                    "    console.log('done generating landingcardpanel');\r",
                    "    var useridField = landingCardPanelLogin.down('#userIdItemId');\r",
                    "    useridField.setValue(lastUserId);\r",
                    "}\r",
                    "\r",
                    "Ext.create('Ext.MessageBox');\r",
                    "\r",
                    "var weekday=new Array(7);\r",
                    "weekday[0]=\"Sunday\";\r",
                    "weekday[1]=\"Monday\";\r",
                    "weekday[2]=\"Tuesday\";\r",
                    "weekday[3]=\"Wednesday\";\r",
                    "weekday[4]=\"Thursday\";\r",
                    "weekday[5]=\"Friday\";\r",
                    "weekday[6]=\"Saturday\";\r",
                    "MyApp.app.weekdayArray = weekday;\r",
                    "console.log('done application launch');\r",
                    ""
                ]
            },
            "designerId": "76f38c4f-ef83-4310-8f7f-16cacff11236"
        },
        {
            "type": "Ext.Viewport",
            "reference": {
                "name": "viewport",
                "type": "object"
            },
            "codeClass": null,
            "userConfig": {
                "itemId": "viewport",
                "layout": "fit"
            },
            "designerId": "596d0014-86e2-4f9e-800c-9b3c96b970d7"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "getToday",
                "implHandler": [
                    "var d = new Date();\r",
                    "var curr_date = d.getDate();\r",
                    "var curr_month = d.getMonth() + 1; //Months are zero based\r",
                    "var curr_year = d.getFullYear();\r",
                    "var today = (curr_month  + \"/\" + curr_date + \"/\" + curr_year);\r",
                    "return today;"
                ]
            },
            "designerId": "c51f9ceb-66d4-4c8c-a7f1-80d84df64303"
        },
        {
            "type": "Ext.Loader",
            "reference": {
                "name": "loader",
                "type": "object"
            },
            "codeClass": null,
            "userConfig": {
                "App": null,
                "paths": [
                    "{ 'Ext':'touch/src'\r",
                    "}"
                ]
            },
            "designerId": "7e28d998-1730-476f-8904-2c20c60cf3c2",
            "customConfigs": [
                {
                    "group": "(Custom Properties)",
                    "name": "App",
                    "type": "string"
                }
            ]
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "getHost",
                "implHandler": [
                    "var env = 'ec2' ; // Change this as required.\r",
                    "\r",
                    "var host = '';\r",
                    "if( env === 'home'){\r",
                    "    host = '192.168.0.105:8080';   \r",
                    "}else if(env === 'office'){\r",
                    "    host = '172.26.0.151:8080';   \r",
                    "}else if(env === 'appfog'){\r",
                    "    host = 'tortlets.aws.af.cm';  \r",
                    "}else if(env === 'cloudfoundry'){\r",
                    "    host = 'tortlets.cfapps.io';     \r",
                    "}else if(env === 'ec2') {\r",
                    "    host = 'ec2-54-200-65-103.us-west-2.compute.amazonaws.com';\r",
                    "}\r",
                    "\r",
                    "return host;"
                ]
            },
            "designerId": "9283d71a-e18f-4a4b-82ce-7bcd8644ff10"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "getServerErrorMessage",
                "implHandler": [
                    "return \"Connectivity Error, try again later.\";"
                ]
            },
            "designerId": "d537fe62-d424-4072-8f14-c32ff965217d"
        }
    ]
}